{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","components/partials/Navbar.js","components/partials/Sidebar.js","components/pages/Dashboard.js","components/partials/UserAddModal.js","actions/userActions.js","components/partials/UserUpdateModal.js","components/pages/number.js","components/auth/Login.js","components/layout/NotFound.js","components/private-route/PrivateRoute.js","components/auth/Register.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/index.js","store.js","components/pages/Users.js","App.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","Navbar","onLogoutClick","e","preventDefault","_this","props","user","this","auth","react_default","a","createElement","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","name","index_es","icon","faSignOutAlt","Component","connect","state","Sidebar","react_router_dom","to","Dashboard","partials_Navbar","partials_Sidebar","faList","faUserAlt","faListOl","UserAddModal","Object","classCallCheck","_super","call","onChange","setState","defineProperty","target","value","onUserAdd","newUser","email","addUser","history","window","location","reload","errors","nextProps","undefined","data","message","$","modal","toast","position","POSITION","TOP_CENTER","data-reset","data-dismiss","noValidate","onSubmit","htmlFor","error","classnames","invalid","form","React","userData","post","then","res","catch","err","response","withRouter","UserUpdateModal","password","onUserUpdate","_id","updateUser","record","success","Numbers","columns","key","text","align","sortable","config","page_size","length_menu","filename","no_data_text","button","excel","print","csv","language","filter","info","pagination","first","previous","next","last","show_length_menu","show_filter","show_pagination","show_info","records","currentRecord","username","number","budget","getData","bind","assertThisInitialized","_this2","get","status","pageData","console","log","partials_UserAddModal","partials_UserUpdateModal","react_datatable_lib_default","onPageChange","pageChange","react_toastify","Login","loginUser","isAuthenticated","push","setItem","jwt_decode","Landing","style","height","_ref","component","rest","objectWithoutProperties","_excluded","react_router","assign","render","Register","password2","registerUser","paddingLeft","width","borderRadius","letterSpacing","marginTop","isEmpty","require","initialState","loading","combineReducers","arguments","length","action","objectSpread2","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","Users","cell","react","editRecord","marginRight","deleteRecord","users","faPlus","jwtToken","currentTime","Date","now","exp","App","es","exact","path","private_route_PrivateRoute","User","NumberList","NotFound","__webpack_require__","r","__webpack_exports__","global","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_App__WEBPACK_IMPORTED_MODULE_3__","jquery__WEBPACK_IMPORTED_MODULE_4__","jquery__WEBPACK_IMPORTED_MODULE_4___default","jQuery","ReactDOM","document","getElementById","click","toggleClass","on","val"],"mappings":"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","file":"static/js/main.228520b9.chunk.js","sourcesContent":["import axios from \"axios\";\nconst setAuthToken = token => {\n    if (token) {\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n};\nexport default setAuthToken;","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport {\n    GET_ERRORS,\n    SET_CURRENT_USER,\n    USER_LOADING\n} from \"./types\";\n\nexport const registerUser = (userData, history) => dispatch => {\n    axios\n        .post(\"/api/register\", userData)\n        .then(res => history.push(\"/login\"))\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\nexport const loginUser = userData => dispatch => {\n    axios\n        .post(\"/api/login\", userData)\n        .then(res => {\n            const { token } = res.data;\n            localStorage.setItem(\"jwtToken\", token);\n            setAuthToken(token);\n            const decoded = jwt_decode(token);\n            dispatch(setCurrentUser(decoded));\n        })\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    };\n};\n\nexport const setUserLoading = () => {\n    return {\n        type: USER_LOADING\n    };\n};\n\nexport const logoutUser = () => dispatch => {\n    localStorage.removeItem(\"jwtToken\");\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n\nexport const USER_ADD = \"USER_ADD\";\nexport const USER_UPDATE = \"USER_UPDATE\";\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nclass Navbar extends Component {\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    render() {\n        const { user } = this.props.auth;\n        return (\n            <div className=\"container-fluid p-0\">\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n                    <a className=\"navbar-brand\" href=\"/\">Flexion</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\"\n                        aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n                        <ul className=\"navbar-nav ml-auto\">\n                            <li className=\"nav-item active\">\n                                <a className=\"nav-link\" href=\"#\" onClick={this.onLogoutClick}>Logout ({user.name}) <FontAwesomeIcon icon={faSignOutAlt} /> </a>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n}\n\nNavbar.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(\n    mapStateToProps,\n    { logoutUser }\n)(Navbar);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { Link } from \"react-router-dom\";\n\nclass Sidebar extends Component {\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    render() {\n        //const { user } = this.props.auth;\n        return (\n            <div className=\"border-right h-100\" id=\"sidebar-wrapper\">\n                <div className=\"list-group list-group-flush\">\n                    <Link to=\"/dashboard\" className=\"list-group-item list-group-item-action\">Dashboard</Link>\n                    <Link to=\"/users\" className=\"list-group-item list-group-item-action\">Numbers</Link>\n                    <Link to=\"/number\" className=\"list-group-item list-group-item-action\">Users</Link>\n                    {/* <Link to=\"/events\" className=\"list-group-item list-group-item-action\">Events</Link> */}\n                    {/* <button className=\"list-group-item list-group-item-action\" onClick={this.onLogoutClick}>Logout <FontAwesomeIcon icon={faSignOutAlt} /></button> */}\n                </div>\n            </div>\n        );\n    }\n}\n\nSidebar.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(\n    mapStateToProps,\n    { logoutUser }\n)(Sidebar);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport Navbar from \"../partials/Navbar\";\nimport Sidebar from \"../partials/Sidebar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faList } from \"@fortawesome/free-solid-svg-icons/faList\";\nimport { Link } from \"react-router-dom\";\nimport { faUserAlt } from \"@fortawesome/free-solid-svg-icons/faUserAlt\";\nimport { faListOl } from \"@fortawesome/free-solid-svg-icons\";\n\nclass Dashboard extends Component {\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    render() {\n        //const { user } = this.props.auth;\n        return (\n            <div>\n                <Navbar />\n                <div className=\"d-flex\" id=\"wrapper\">\n                    <Sidebar />\n                    <div id=\"page-content-wrapper\">\n                        <div className=\"container-fluid\">\n                            <button className=\"btn btn-link mt-2\" id=\"menu-toggle\"><FontAwesomeIcon icon={faList} /></button>\n                            <h1 className=\"mt-2 text-primary\">Dashboard</h1>\n                            <div className=\"row px-2\">\n                                <div className=\"col-sm-3 p-sm-2\">\n                                    <div className=\"card bg-primary text-white shadow-lg\">\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">Numbers</h5>\n                                            <p className=\"card-text\">All number details</p>\n                                            <Link to=\"/users\" className=\"btn btn-light\"><FontAwesomeIcon className=\"text-primary\" icon={faUserAlt} /> Go to Numbers</Link>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-sm-3 p-sm-2\">\n                                    <div className=\"card bg-primary text-white shadow-lg\">\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\"> Users</h5>\n                                            <p className=\"card-text\">.All users will expand here.</p>\n                                            <Link to=\"/number\" className=\"btn btn-light\"><FontAwesomeIcon className=\"text-primary\" icon={faListOl} /> Go to Users</Link>\n                                        </div>\n                                    </div>\n                                </div>\n                                {/* <div className=\"col-sm-3 p-sm-2\">\n                                    <div className=\"card bg-info text-white shadow-lg\">\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">Special title treatment</h5>\n                                            <p className=\"card-text\">With supporting text below as a natural lead-in to\n                                                additional content.</p>\n                                            <a href=\"#\" className=\"btn btn-light\">Go somewhere</a>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-sm-3 p-sm-2\">\n                                    <div className=\"card bg-dark text-white shadow-lg\">\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">Special title treatment</h5>\n                                            <p className=\"card-text\">With supporting text below as a natural lead-in to\n                                                additional content.</p>\n                                            <a href=\"#\" className=\"btn btn-light\">Go somewhere</a>\n                                        </div>\n                                    </div>\n                                </div> */}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDashboard.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(\n    mapStateToProps,\n    { logoutUser }\n)(Dashboard);\n","import React from 'react'\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addUser } from \"../../actions/userActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport $ from 'jquery';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass UserAddModal extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            // password: \"\",\r\n            // password2: \"\",\r\n            errors: {},\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n        if (nextProps.auth !== undefined\r\n            && nextProps.auth.user !== undefined\r\n            && nextProps.auth.user.data !== undefined\r\n            && nextProps.auth.user.data.message !== undefined) {\r\n            $('#add-user-modal').modal('hide');\r\n            toast(nextProps.auth.user.data.message, {\r\n                position: toast.POSITION.TOP_CENTER\r\n            })\r\n            // window.location.reload()\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onUserAdd = e => {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            // password: this.state.password,\r\n            // password2: this.state.password2\r\n        };\r\n        this.props.addUser(newUser, this.props.history);\r\n        window.location.reload()\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\" id=\"add-user-modal\" data-reset=\"true\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Add Number</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form noValidate onSubmit={this.onUserAdd} id=\"add-user\">\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">Name</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.name}\r\n                                                id=\"name\"\r\n                                                type=\"text\"\r\n                                                error={errors.name}\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.name\r\n                                                })} />\r\n                                            <span className=\"text-danger\">{errors.name}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"email\">Number</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.email}\r\n                                                error={errors.email}\r\n                                                id=\"email\"\r\n                                                type=\"number\"\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.email\r\n                                                })}\r\n                                            />\r\n                                            <span className=\"text-danger\">{errors.email}</span>\r\n                                        </div>\r\n                                        {/* </div> */}\r\n                                        {/* <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"password\">Password</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.password}\r\n                                                error={errors.password}\r\n                                                id=\"password\"\r\n                                                type=\"password\"\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.password\r\n                                                })}\r\n                                            />\r\n                                            <span className=\"text-danger\">{errors.password}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"password2\">Confirm Password</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.password2}\r\n                                                id=\"password2\"\r\n                                                type=\"password\"\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.password2\r\n                                                })}\r\n                                            />\r\n                                            <span className=\"text-danger\">{errors.password2}</span>\r\n                                        </div> */}\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button\r\n                                    form=\"add-user\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\">\r\n                                    Add Number\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUserAddModal.propTypes = {\r\n    addUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { addUser }\r\n)(withRouter(UserAddModal));\r\n","import axios from \"axios\";\nimport {\n    GET_ERRORS,\n    USER_ADD,\n    USER_UPDATE\n} from \"./types\";\n\nexport const addUser = (userData, history) => dispatch => {\n    axios\n        .post(\"/api/user-add\", userData)\n        .then(res =>\n            dispatch({\n                type: USER_ADD,\n                payload: res,\n            })\n        ).catch(err =>\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    );\n};\n\n\nexport const updateUser = (userData) => dispatch => {\n    axios\n        .post(\"/api/user-update\", userData)\n        .then(res =>\n            dispatch({\n                type: USER_UPDATE,\n                payload: res,\n            })\n        ).catch(err =>\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    );\n};\n","import React from 'react'\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { updateUser } from \"../../actions/userActions\";\nimport { withRouter } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport $ from 'jquery';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass UserUpdateModal extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.record.id,\n            name: this.props.record.name,\n            email: this.props.record.email,\n            // password: '',\n            errors: {},\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.record) {\n            this.setState({\n                id: nextProps.record.id,\n                name: nextProps.record.name,\n                email: nextProps.record.email,\n            })\n        }\n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n        if (nextProps.auth !== undefined\n            && nextProps.auth.user !== undefined\n            && nextProps.auth.user.data !== undefined\n            && nextProps.auth.user.data.message !== undefined\n            && nextProps.auth.user.data.success) {\n            $('#update-user-modal').modal('hide');\n            // this.setState({\n            //     errors: {}\n            // })\n            toast(nextProps.auth.user.data.message, {\n                position: toast.POSITION.TOP_CENTER\n            });\n            // window.location.reload()\n        }\n    }\n\n    onChange = e => {\n        if (e.target.id === 'user-update-name') {\n            this.setState({ name: e.target.value });\n        }\n        if (e.target.id === 'user-update-email') {\n            this.setState({ email: e.target.value });\n        }\n        if (e.target.id === 'user-update-password') {\n            this.setState({ password: e.target.value });\n        }\n    };\n\n    onUserUpdate = e => {\n        e.preventDefault();\n        const newUser = {\n            _id: this.state.id,\n            name: this.state.name,\n            email: this.state.email,\n            // password: this.state.password\n        };\n        this.props.updateUser(newUser);\n        window.location.reload()\n    };\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div>\n                <div className=\"modal fade\" id=\"update-user-modal\">\n                    <div className=\"modal-dialog modal-lg\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h4 className=\"modal-title\">Update User</h4>\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <form noValidate onSubmit={this.onUserUpdate} id=\"update-user\">\n                                    <input\n                                        onChange={this.onChange}\n                                        value={this.state.id}\n                                        id=\"user-update-id\"\n                                        type=\"text\"\n                                        className=\"d-none\" />\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-md-3\">\n                                            <label htmlFor=\"name\">Name</label>\n                                        </div>\n                                        <div className=\"col-md-9\">\n                                            <input\n                                                onChange={this.onChange}\n                                                value={this.state.name}\n                                                id=\"user-update-name\"\n                                                type=\"text\"\n                                                error={errors.name}\n                                                className={classnames(\"form-control\", {\n                                                    invalid: errors.name\n                                                })} />\n                                            <span className=\"text-danger\">{errors.name}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-md-3\">\n                                            <label htmlFor=\"email\">Number</label>\n                                        </div>\n                                        <div className=\"col-md-9\">\n                                            <input\n                                                onChange={this.onChange}\n                                                value={this.state.email}\n                                                error={errors.email}\n                                                id=\"user-update-email\"\n                                                type=\"number\"\n                                                className={classnames(\"form-control\", {\n                                                    invalid: errors.email\n                                                })}\n                                            />\n                                            <span className=\"text-danger\">{errors.email}</span>\n                                        </div>\n                                    </div>\n                                    {/* <div className=\"row mt-2\">\n                                        <div className=\"col-md-3\">\n                                            <label htmlFor=\"password\">Password</label>\n                                        </div>\n                                        <div className=\"col-md-9\">\n                                            <input\n                                                data-reset-input={true}\n                                                autoComplete={''}\n                                                onChange={this.onChange}\n                                                error={errors.password}\n                                                id=\"user-update-password\"\n                                                type=\"password\"\n                                                className={classnames(\"form-control\", {\n                                                    invalid: errors.password\n                                                })}\n                                            />\n                                            <span className=\"text-danger\">{errors.password}</span>\n                                        </div>\n                                    </div> */}\n                                </form>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                <button\n                                    form=\"update-user\"\n                                    type=\"submit\"\n                                    className=\"btn btn-primary\">\n                                    Update User\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nUserUpdateModal.propTypes = {\n    updateUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { updateUser }\n)(withRouter(UserUpdateModal));\n","import React, { Component, Fragment } from \"react\";\r\nimport Navbar from \"../partials/Navbar\";\r\nimport Sidebar from \"../partials/Sidebar\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faList } from \"@fortawesome/free-solid-svg-icons/faList\";\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\n// import { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport UserAddModal from \"../partials/UserAddModal\";\r\nimport UserUpdateModal from \"../partials/UserUpdateModal\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\n\r\nclass Numbers extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.columns = [\r\n            // {\r\n            //     key: \"_id\",\r\n            //     text: \"Id\",\r\n            //     className: \"id\",\r\n            //     align: \"left\",\r\n            //     sortable: true,\r\n            // },\r\n            {\r\n                key: \"username\",\r\n                text: \"Name\",\r\n                className: \"name\",\r\n                align: \"left\",\r\n                sortable: true,\r\n            },\r\n            {\r\n                key: \"number\",\r\n                text: \"Number\",\r\n                className: \"email\",\r\n                align: \"left\",\r\n                sortable: true\r\n            },\r\n            {\r\n                key: \"budget\",\r\n                text: \"Budget\",\r\n                className: \"date\",\r\n                align: \"left\",\r\n                sortable: true\r\n            },\r\n            // {\r\n            //     key: \"action\",\r\n            //     text: \"Action\",\r\n            //     className: \"action\",\r\n            //     width: 100,\r\n            //     align: \"left\",\r\n            //     sortable: false,\r\n            //     cell: record => {\r\n            //         return (\r\n            //             <Fragment>\r\n            //                 <button\r\n            //                     data-toggle=\"modal\"\r\n            //                     data-target=\"#update-user-modal\"\r\n            //                     className=\"btn btn-primary btn-sm\"\r\n            //                     onClick={() => this.editRecord(record)}\r\n            //                     style={{ marginRight: '5px' }}>\r\n            //                     <i className=\"fa fa-edit\"></i>\r\n            //                 </button>\r\n            //                 <button\r\n            //                     className=\"btn btn-danger btn-sm\"\r\n            //                     onClick={() => this.deleteRecord(record)}>\r\n            //                     <i className=\"fa fa-trash\"></i>\r\n            //                 </button>\r\n            //             </Fragment>\r\n            //         );\r\n            //     }\r\n            // }\r\n        ];\r\n\r\n        this.config = {\r\n            page_size: 10,\r\n            length_menu: [10, 20, 50],\r\n            filename: \"Users\",\r\n            no_data_text: 'No user found!',\r\n            button: {\r\n                excel: true,\r\n                print: true,\r\n                csv: true\r\n            },\r\n            language: {\r\n                length_menu: \"Show _MENU_ result per page\",\r\n                filter: \"Filter in records...\",\r\n                info: \"Showing _START_ to _END_ of _TOTAL_ records\",\r\n                pagination: {\r\n                    first: \"First\",\r\n                    previous: \"Previous\",\r\n                    next: \"Next\",\r\n                    last: \"Last\"\r\n                }\r\n            },\r\n            show_length_menu: true,\r\n            show_filter: true,\r\n            show_pagination: true,\r\n            show_info: true,\r\n        };\r\n\r\n        this.state = {\r\n            records: []\r\n        };\r\n\r\n        this.state = {\r\n            currentRecord: {\r\n                id: '',\r\n                username: '',\r\n                number: '',\r\n                budget: '',\r\n                // password2: '',\r\n            }\r\n        };\r\n\r\n        this.getData = this.getData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.getData()\r\n    }\r\n\r\n    getData() {\r\n        axios\r\n            .get(\"http://3.83.93.49:3001/api/list\")\r\n            .then(res => {\r\n                // console.log(res.data.data)\r\n                this.setState({ records: res.data.data })\r\n            })\r\n            .catch()\r\n    }\r\n\r\n    editRecord(record) {\r\n        this.setState({ currentRecord: record });\r\n    }\r\n\r\n    deleteRecord(record) {\r\n        axios\r\n            .post(\"/api/user-delete\", { _id: record._id })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    toast(res.data.message, {\r\n                        position: toast.POSITION.TOP_CENTER,\r\n                    })\r\n                }\r\n            })\r\n            .catch();\r\n        this.getData();\r\n    }\r\n\r\n    pageChange(pageData) {\r\n        console.log(\"OnPageChange\", pageData);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <div className=\"d-flex\" id=\"wrapper\">\r\n                    <Sidebar />\r\n                    <UserAddModal />\r\n                    <UserUpdateModal record={this.state.currentRecord} />\r\n                    <div id=\"page-content-wrapper\">\r\n                        <div className=\"container-fluid\">\r\n                            <button className=\"btn btn-link mt-3\" id=\"menu-toggle\"><FontAwesomeIcon icon={faList} /></button>\r\n                            {/* <button className=\"btn btn-outline-primary float-right mt-3 mr-2\" data-toggle=\"modal\" data-target=\"#add-user-modal\"><FontAwesomeIcon icon={faPlus} /> Add User</button> */}\r\n                            <h1 className=\"mt-2 text-primary\">Users List</h1>\r\n                            <ReactDatatable\r\n                                config={this.config}\r\n                                columns={this.columns}\r\n                                records={this.state.records}\r\n                                onPageChange={this.pageChange.bind(this)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <ToastContainer />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nNumbers.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    records: state.records\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Numbers);\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            email: \"\",\n            password: \"\",\n            errors: {}\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n\n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n        const userData = {\n            email: this.state.email,\n            password: this.state.password\n        };\n        this.props.loginUser(userData);\n    };\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"container\">\n                <div className=\"row mt-5\">\n                    <div className=\"col-md-4 mx-auto mt-5 card shadow-lg\">\n                        <div className=\"card-body p-1\">\n                            <h2 className=\"text-center text-primary mt-3\">Login</h2>\n                            <form noValidate onSubmit={this.onSubmit} className=\"white\">\n                                <label htmlFor=\"email\">Email</label>\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.email}\n                                    error={errors.email}\n                                    id=\"email\"\n                                    type=\"email\"\n                                    className={classnames(\"form-control\", {\n                                        invalid: errors.email\n                                    })}\n                                />\n                                <span className=\"text-danger\">{errors.email}</span>\n                                <br />\n                                <label htmlFor=\"password\">Password</label>\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.password}\n                                    error={errors.password}\n                                    id=\"password\"\n                                    type=\"password\"\n                                    className={classnames(\"form-control\", {\n                                        invalid: errors.password\n                                    })}\n                                />\n                                <span className=\"text-danger\">{errors.password}</span>\n                                <p className=\"text-center pb-0 mt-2\">\n                                    <button\n                                        type=\"submit\"\n                                        className=\"btn btn-large btn-primary mt-2 px-5\">\n                                        Login\n                                    </button>\n                                </p>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n    { loginUser }\n)(Login);\n","import React, { Component } from \"react\";\nclass Landing extends Component {\n    render() {\n        return (\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <h1>\n                           Not Found\n                        </h1>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Landing;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            auth.isAuthenticated === true ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to=\"/login\" />\n            )\n        }\n    />\n);\n\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Component } from \"react\";\nimport { Link, withRouter  } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            password2: \"\",\n            errors: {}\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n        const newUser = {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            password2: this.state.password2\n        };\n        this.props.registerUser(newUser, this.props.history);\n    };\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col s8 offset-s2\">\n                        <Link to=\"/\" className=\"btn-flat waves-effect\">\n                            <i className=\"material-icons left\">keyboard_backspace</i> Back to\n                            home\n                        </Link>\n                        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                            <h4>\n                                <b>Register</b> below\n                            </h4>\n                            <p className=\"grey-text text-darken-1\">\n                                Already have an account? <Link to=\"/login\">Log in</Link>\n                            </p>\n                        </div>\n                        <form noValidate onSubmit={this.onSubmit}>\n                            <div className=\"input-field col s12\">\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.name}\n                                    id=\"name\"\n                                    type=\"text\"\n                                    error={errors.name}\n                                    className={classnames(\"\", {\n                                        invalid: errors.name\n                                    })}\n                                />\n                                <label htmlFor=\"name\">Name</label>\n                                <span className=\"red-text\">{errors.name}</span>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.email}\n                                    error={errors.email}\n                                    id=\"email\"\n                                    type=\"email\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.email\n                                    })}\n                                />\n                                <label htmlFor=\"email\">Email</label>\n                                <span className=\"red-text\">{errors.email}</span>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.password}\n                                    error={errors.password}\n                                    id=\"password\"\n                                    type=\"password\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.password\n                                    })}\n                                />\n                                <label htmlFor=\"password\">Password</label>\n                                <span className=\"red-text\">{errors.password}</span>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.password2}\n                                    id=\"password2\"\n                                    type=\"password\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.password2\n                                    })}\n                                />\n                                <label htmlFor=\"password2\">Confirm Password</label>\n                                <span className=\"red-text\">{errors.password2}</span>\n                            </div>\n                            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                                <button\n                                    style={{\n                                        width: \"150px\",\n                                        borderRadius: \"3px\",\n                                        letterSpacing: \"1.5px\",\n                                        marginTop: \"1rem\"\n                                    }}\n                                    type=\"submit\"\n                                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\">\n                                    Sign up\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nRegister.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { registerUser }\n)(withRouter(Register));","import {\n    SET_CURRENT_USER,\n    USER_ADD,\n    USER_LOADING,\n    USER_UPDATE\n} from \"../actions/types\";\nconst isEmpty = require(\"is-empty\");\nconst initialState = {\n    isAuthenticated: false,\n    user: {},\n    loading: false,\n};\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case USER_ADD:\n            return {\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        case USER_UPDATE:\n            return {\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload,\n            };\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        case USER_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        default:\n            return state;\n    }\n}\n","import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducers\";\nimport errorReducer from \"./errorReducers\";\nexport default combineReducers({\n    auth: authReducer,\n    errors: errorReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware),\n        //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\nexport default store;\n","import React, { Component, Fragment } from \"react\";\r\nimport Navbar from \"../partials/Navbar\";\r\nimport Sidebar from \"../partials/Sidebar\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faList } from \"@fortawesome/free-solid-svg-icons/faList\";\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport UserAddModal from \"../partials/UserAddModal\";\r\nimport UserUpdateModal from \"../partials/UserUpdateModal\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\n\r\nclass Users extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.columns = [\r\n            // {\r\n            //     key: \"_id\",\r\n            //     text: \"Id\",\r\n            //     className: \"id\",\r\n            //     align: \"left\",\r\n            //     sortable: true,\r\n            // },\r\n            {\r\n                key: \"name\",\r\n                text: \"Name\",\r\n                className: \"name\",\r\n                align: \"left\",\r\n                sortable: true,\r\n            },\r\n            {\r\n                key: \"email\",\r\n                text: \"Number\",\r\n                className: \"email\",\r\n                align: \"left\",\r\n                sortable: true\r\n            },\r\n            // {\r\n            //     key: \"date\",\r\n            //     text: \"Date\",\r\n            //     className: \"date\",\r\n            //     align: \"left\",\r\n            //     sortable: true\r\n            // },\r\n            {\r\n                key: \"action\",\r\n                text: \"Action\",\r\n                className: \"action\",\r\n                width: 100,\r\n                align: \"left\",\r\n                sortable: false,\r\n                cell: record => {\r\n                    return (\r\n                        <Fragment>\r\n                            <button\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#update-user-modal\"\r\n                                className=\"btn btn-primary btn-sm\"\r\n                                onClick={() => this.editRecord(record)}\r\n                                style={{ marginRight: '5px' }}>\r\n                                <i className=\"fa fa-edit\"></i>\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-danger btn-sm\"\r\n                                onClick={() => this.deleteRecord(record)}>\r\n                                <i className=\"fa fa-trash\"></i>\r\n                            </button>\r\n                        </Fragment>\r\n                    );\r\n                }\r\n            }\r\n        ];\r\n\r\n        this.config = {\r\n            page_size: 10,\r\n            length_menu: [10, 20, 50],\r\n            filename: \"Users\",\r\n            no_data_text: 'No user found!',\r\n            button: {\r\n                excel: true,\r\n                print: true,\r\n                csv: true\r\n            },\r\n            language: {\r\n                length_menu: \"Show _MENU_ result per page\",\r\n                filter: \"Filter in records...\",\r\n                info: \"Showing _START_ to _END_ of _TOTAL_ records\",\r\n                pagination: {\r\n                    first: \"First\",\r\n                    previous: \"Previous\",\r\n                    next: \"Next\",\r\n                    last: \"Last\"\r\n                }\r\n            },\r\n            show_length_menu: true,\r\n            show_filter: true,\r\n            show_pagination: true,\r\n            show_info: true,\r\n        };\r\n\r\n        this.state = {\r\n            records: []\r\n        };\r\n\r\n        this.state = {\r\n            currentRecord: {\r\n                id: '',\r\n                name: '',\r\n                email: '',\r\n                // password: '',\r\n                // password2: '',\r\n            }\r\n        };\r\n\r\n        this.getData = this.getData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.getData()\r\n    }\r\n\r\n    getData() {\r\n        axios\r\n            .get(\"/api/user-data\")\r\n            .then(res => {\r\n                this.setState({ records: res.data.users.data })\r\n            })\r\n            .catch()\r\n    }\r\n\r\n    editRecord(record) {\r\n        this.setState({ currentRecord: record });\r\n    }\r\n\r\n    deleteRecord(record) {\r\n        axios\r\n            .post(\"/api/user-delete\", { _id: record._id })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    toast(res.data.message, {\r\n                        position: toast.POSITION.TOP_CENTER,\r\n                    })\r\n                }\r\n            })\r\n            .catch();\r\n        this.getData();\r\n    }\r\n\r\n    pageChange(pageData) {\r\n        console.log(\"OnPageChange\", pageData);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <div className=\"d-flex\" id=\"wrapper\">\r\n                    <Sidebar />\r\n                    <UserAddModal />\r\n                    <UserUpdateModal record={this.state.currentRecord} />\r\n                    <div id=\"page-content-wrapper\">\r\n                        <div className=\"container-fluid\">\r\n                            <button className=\"btn btn-link mt-3\" id=\"menu-toggle\"><FontAwesomeIcon icon={faList} /></button>\r\n                            <button className=\"btn btn-outline-primary float-right mt-3 mr-2\" data-toggle=\"modal\" data-target=\"#add-user-modal\"><FontAwesomeIcon icon={faPlus} />Add Number</button>\r\n                            <h1 className=\"mt-2 text-primary\">Number List</h1>\r\n                            <ReactDatatable\r\n                                config={this.config}\r\n                                records={this.state.records}\r\n                                columns={this.columns}\r\n                                onPageChange={this.pageChange.bind(this)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <ToastContainer />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nUsers.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    records: state.records\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Users);\r\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"./components/pages/Dashboard\";\nimport NumberList from \"./components/pages/number\";\nimport React, { Component } from 'react';\nimport Login from \"./components/auth/Login\";\nimport NotFound from \"./components/layout/NotFound\";\nimport { Provider } from \"react-redux\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Register from \"./components/auth/Register\";\nimport store from \"./store\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap';\nimport '../node_modules/font-awesome/css/font-awesome.css';\nimport '../node_modules/jquery/dist/jquery.min';\nimport '../node_modules/popper.js/dist/popper';\n\nimport User from \"./components/pages/Users\";\n\nif (localStorage.jwtToken) {\n    const token = localStorage.jwtToken;\n    setAuthToken(token);\n    const decoded = jwt_decode(token);\n    store.dispatch(setCurrentUser(decoded));\n    const currentTime = Date.now() / 1000;\n    if (decoded.exp < currentTime) {\n        store.dispatch(logoutUser());\n        window.location.href = \"./login\";\n    }\n}\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <Router>\n                    <div className=\"App\">\n                        <Switch>\n                            <Route exact path=\"/\" component={Login} />\n                            <Route exact path=\"/register\" component={Register} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Switch>\n                                <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n                                <PrivateRoute exact path=\"/users\" component={User} />\n                                <PrivateRoute exact path=\"/number\" component={NumberList} />\n                            </Switch>\n                            <Route exact path=\"*\" component={NotFound} />\n                        </Switch>\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport $ from \"jquery\";\nwindow.jQuery = $;\nwindow.$ = $;\nglobal.jQuery = $;\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n$(\"#menu-toggle\").click(function() {\n    $(\"#wrapper\").toggleClass(\"toggled\");\n});\n\n$('.modal[data-reset=\"true\"]').on('shown.bs.modal', () =>\n    $(\"input[name != 'timestamp']\").val(''));\n\n$('.modal').on('shown.bs.modal', () =>\n    $('input[data-reset-input=\"true\"]').val(''));\n"],"sourceRoot":""}