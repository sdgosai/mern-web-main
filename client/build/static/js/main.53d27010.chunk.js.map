{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","components/partials/Navbar.js","components/partials/Sidebar.js","components/pages/Dashboard.js","components/auth/Login.js","components/layout/NotFound.js","components/private-route/PrivateRoute.js","components/auth/Register.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/index.js","store.js","components/partials/UserAddModal.js","actions/userActions.js","components/partials/UserUpdateModal.js","components/pages/Users.js","App.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","Navbar","onLogoutClick","e","preventDefault","_this","props","user","this","auth","react_default","a","createElement","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","name","index_es","icon","faSignOutAlt","Component","connect","state","Sidebar","react_router_dom","to","Dashboard","partials_Navbar","partials_Sidebar","faList","faUserAlt","Login","Object","classCallCheck","_super","call","onChange","setState","defineProperty","target","value","onSubmit","userData","email","password","loginUser","errors","isAuthenticated","history","push","nextProps","noValidate","htmlFor","error","classnames","invalid","post","then","res","data","setItem","jwt_decode","catch","err","response","Landing","style","height","_ref","component","rest","objectWithoutProperties","_excluded","react_router","assign","render","Register","newUser","password2","registerUser","paddingLeft","width","borderRadius","letterSpacing","marginTop","withRouter","isEmpty","require","initialState","loading","combineReducers","arguments","length","undefined","action","objectSpread2","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","UserAddModal","onUserAdd","addUser","window","location","reload","message","$","modal","toast","position","POSITION","TOP_CENTER","data-reset","data-dismiss","form","React","UserUpdateModal","onUserUpdate","_id","updateUser","record","success","Users","columns","key","text","align","sortable","cell","react","editRecord","marginRight","deleteRecord","config","page_size","length_menu","filename","no_data_text","button","excel","print","csv","language","filter","info","pagination","first","previous","next","last","show_length_menu","show_filter","show_pagination","show_info","records","currentRecord","getData","bind","assertThisInitialized","_this2","status","pageData","console","log","partials_UserAddModal","partials_UserUpdateModal","faPlus","react_datatable_lib_default","onPageChange","pageChange","react_toastify","jwtToken","currentTime","Date","now","exp","App","es","exact","path","private_route_PrivateRoute","User","NotFound","__webpack_require__","r","__webpack_exports__","global","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_App__WEBPACK_IMPORTED_MODULE_3__","jquery__WEBPACK_IMPORTED_MODULE_4__","jquery__WEBPACK_IMPORTED_MODULE_4___default","jQuery","ReactDOM","document","getElementById","click","toggleClass","on","val"],"mappings":"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","file":"static/js/main.53d27010.chunk.js","sourcesContent":["import axios from \"axios\";\nconst setAuthToken = token => {\n    if (token) {\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n};\nexport default setAuthToken;","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport {\n    GET_ERRORS,\n    SET_CURRENT_USER,\n    USER_LOADING\n} from \"./types\";\n\nexport const registerUser = (userData, history) => dispatch => {\n    axios\n        .post(\"/api/register\", userData)\n        .then(res => history.push(\"/login\"))\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\nexport const loginUser = userData => dispatch => {\n    axios\n        .post(\"/api/login\", userData)\n        .then(res => {\n            const { token } = res.data;\n            localStorage.setItem(\"jwtToken\", token);\n            setAuthToken(token);\n            const decoded = jwt_decode(token);\n            dispatch(setCurrentUser(decoded));\n        })\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    };\n};\n\nexport const setUserLoading = () => {\n    return {\n        type: USER_LOADING\n    };\n};\n\nexport const logoutUser = () => dispatch => {\n    localStorage.removeItem(\"jwtToken\");\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n\nexport const USER_ADD = \"USER_ADD\";\nexport const USER_UPDATE = \"USER_UPDATE\";\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nclass Navbar extends Component {\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    render() {\n        const { user } = this.props.auth;\n        return (\n            <div className=\"container-fluid p-0\">\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n                    <a className=\"navbar-brand\" href=\"/\">Flexion</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\"\n                        aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n                        <ul className=\"navbar-nav ml-auto\">\n                            <li className=\"nav-item active\">\n                                <a className=\"nav-link\" href=\"#\" onClick={this.onLogoutClick}>Logout ({user.name}) <FontAwesomeIcon icon={faSignOutAlt} /> </a>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n}\n\nNavbar.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(\n    mapStateToProps,\n    { logoutUser }\n)(Navbar);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { Link } from \"react-router-dom\";\n\nclass Sidebar extends Component {\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    render() {\n        //const { user } = this.props.auth;\n        return (\n            <div className=\"border-right h-100\" id=\"sidebar-wrapper\">\n                <div className=\"list-group list-group-flush\">\n                    <Link to=\"/dashboard\" className=\"list-group-item list-group-item-action\">Dashboard</Link>\n                    <Link to=\"/users\" className=\"list-group-item list-group-item-action\">Users</Link>\n                    {/* <Link to=\"/events\" className=\"list-group-item list-group-item-action\">Events</Link> */}\n                    {/* <button className=\"list-group-item list-group-item-action\" onClick={this.onLogoutClick}>Logout <FontAwesomeIcon icon={faSignOutAlt} /></button> */}\n                </div>\n            </div>\n        );\n    }\n}\n\nSidebar.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(\n    mapStateToProps,\n    { logoutUser }\n)(Sidebar);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport Navbar from \"../partials/Navbar\";\nimport Sidebar from \"../partials/Sidebar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faList } from \"@fortawesome/free-solid-svg-icons/faList\";\nimport { Link } from \"react-router-dom\";\nimport { faUserAlt } from \"@fortawesome/free-solid-svg-icons/faUserAlt\";\n\nclass Dashboard extends Component {\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    render() {\n        //const { user } = this.props.auth;\n        return (\n            <div>\n                <Navbar />\n                <div className=\"d-flex\" id=\"wrapper\">\n                    <Sidebar />\n                    <div id=\"page-content-wrapper\">\n                        <div className=\"container-fluid\">\n                            <button className=\"btn btn-link mt-2\" id=\"menu-toggle\"><FontAwesomeIcon icon={faList} /></button>\n                            <h1 className=\"mt-2 text-primary\">Dashboard</h1>\n                            <div className=\"row px-2\">\n                                <div className=\"col-sm-3 p-sm-2\">\n                                    <div className=\"card bg-primary text-white shadow-lg\">\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">Users</h5>\n                                            <p className=\"card-text\">With supporting text below as a natural lead-in to\n                                                additional content.</p>\n                                            <Link to=\"/users\" className=\"btn btn-light\"><FontAwesomeIcon className=\"text-primary\" icon={faUserAlt} /> Go to Users</Link>\n                                        </div>\n                                    </div>\n                                </div>\n                                {/* <div className=\"col-sm-3 p-sm-2\">\n                                    <div className=\"card bg-secondary text-white shadow-lg\">\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">Special title treatment</h5>\n                                            <p className=\"card-text\">With supporting text below as a natural lead-in to\n                                                additional content.</p>\n                                            <a href=\"#\" className=\"btn btn-light\">Go somewhere</a>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-sm-3 p-sm-2\">\n                                    <div className=\"card bg-info text-white shadow-lg\">\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">Special title treatment</h5>\n                                            <p className=\"card-text\">With supporting text below as a natural lead-in to\n                                                additional content.</p>\n                                            <a href=\"#\" className=\"btn btn-light\">Go somewhere</a>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-sm-3 p-sm-2\">\n                                    <div className=\"card bg-dark text-white shadow-lg\">\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">Special title treatment</h5>\n                                            <p className=\"card-text\">With supporting text below as a natural lead-in to\n                                                additional content.</p>\n                                            <a href=\"#\" className=\"btn btn-light\">Go somewhere</a>\n                                        </div>\n                                    </div>\n                                </div> */}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDashboard.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(\n    mapStateToProps,\n    { logoutUser }\n)(Dashboard);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            email: \"\",\n            password: \"\",\n            errors: {}\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n\n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n        const userData = {\n            email: this.state.email,\n            password: this.state.password\n        };\n        this.props.loginUser(userData);\n    };\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"container\">\n                <div className=\"row mt-5\">\n                    <div className=\"col-md-4 mx-auto mt-5 card shadow-lg\">\n                        <div className=\"card-body p-1\">\n                            <h2 className=\"text-center text-primary mt-3\">Login</h2>\n                            <form noValidate onSubmit={this.onSubmit} className=\"white\">\n                                <label htmlFor=\"email\">Email</label>\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.email}\n                                    error={errors.email}\n                                    id=\"email\"\n                                    type=\"email\"\n                                    className={classnames(\"form-control\", {\n                                        invalid: errors.email\n                                    })}\n                                />\n                                <span className=\"text-danger\">{errors.email}</span>\n                                <br />\n                                <label htmlFor=\"password\">Password</label>\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.password}\n                                    error={errors.password}\n                                    id=\"password\"\n                                    type=\"password\"\n                                    className={classnames(\"form-control\", {\n                                        invalid: errors.password\n                                    })}\n                                />\n                                <span className=\"text-danger\">{errors.password}</span>\n                                <p className=\"text-center pb-0 mt-2\">\n                                    <button\n                                        type=\"submit\"\n                                        className=\"btn btn-large btn-primary mt-2 px-5\">\n                                        Login\n                                    </button>\n                                </p>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n    { loginUser }\n)(Login);\n","import React, { Component } from \"react\";\nclass Landing extends Component {\n    render() {\n        return (\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <h1>\n                           Not Found\n                        </h1>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Landing;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            auth.isAuthenticated === true ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to=\"/login\" />\n            )\n        }\n    />\n);\n\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Component } from \"react\";\nimport { Link, withRouter  } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            password2: \"\",\n            errors: {}\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n        const newUser = {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            password2: this.state.password2\n        };\n        this.props.registerUser(newUser, this.props.history);\n    };\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col s8 offset-s2\">\n                        <Link to=\"/\" className=\"btn-flat waves-effect\">\n                            <i className=\"material-icons left\">keyboard_backspace</i> Back to\n                            home\n                        </Link>\n                        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                            <h4>\n                                <b>Register</b> below\n                            </h4>\n                            <p className=\"grey-text text-darken-1\">\n                                Already have an account? <Link to=\"/login\">Log in</Link>\n                            </p>\n                        </div>\n                        <form noValidate onSubmit={this.onSubmit}>\n                            <div className=\"input-field col s12\">\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.name}\n                                    id=\"name\"\n                                    type=\"text\"\n                                    error={errors.name}\n                                    className={classnames(\"\", {\n                                        invalid: errors.name\n                                    })}\n                                />\n                                <label htmlFor=\"name\">Name</label>\n                                <span className=\"red-text\">{errors.name}</span>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.email}\n                                    error={errors.email}\n                                    id=\"email\"\n                                    type=\"email\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.email\n                                    })}\n                                />\n                                <label htmlFor=\"email\">Email</label>\n                                <span className=\"red-text\">{errors.email}</span>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.password}\n                                    error={errors.password}\n                                    id=\"password\"\n                                    type=\"password\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.password\n                                    })}\n                                />\n                                <label htmlFor=\"password\">Password</label>\n                                <span className=\"red-text\">{errors.password}</span>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.password2}\n                                    id=\"password2\"\n                                    type=\"password\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.password2\n                                    })}\n                                />\n                                <label htmlFor=\"password2\">Confirm Password</label>\n                                <span className=\"red-text\">{errors.password2}</span>\n                            </div>\n                            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                                <button\n                                    style={{\n                                        width: \"150px\",\n                                        borderRadius: \"3px\",\n                                        letterSpacing: \"1.5px\",\n                                        marginTop: \"1rem\"\n                                    }}\n                                    type=\"submit\"\n                                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\">\n                                    Sign up\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nRegister.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { registerUser }\n)(withRouter(Register));","import {\n    SET_CURRENT_USER,\n    USER_ADD,\n    USER_LOADING,\n    USER_UPDATE\n} from \"../actions/types\";\nconst isEmpty = require(\"is-empty\");\nconst initialState = {\n    isAuthenticated: false,\n    user: {},\n    loading: false,\n};\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case USER_ADD:\n            return {\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        case USER_UPDATE:\n            return {\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload,\n            };\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        case USER_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        default:\n            return state;\n    }\n}\n","import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducers\";\nimport errorReducer from \"./errorReducers\";\nexport default combineReducers({\n    auth: authReducer,\n    errors: errorReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware),\n        //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\nexport default store;\n","import React from 'react'\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addUser } from \"../../actions/userActions\";\nimport { withRouter } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport $ from 'jquery';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass UserAddModal extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            name: \"\",\n            email: \"\",\n            // password: \"\",\n            // password2: \"\",\n            errors: {},\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n        if (nextProps.auth !== undefined\n            && nextProps.auth.user !== undefined\n            && nextProps.auth.user.data !== undefined\n            && nextProps.auth.user.data.message !== undefined) {\n            $('#add-user-modal').modal('hide');\n            toast(nextProps.auth.user.data.message, {\n                position: toast.POSITION.TOP_CENTER\n            })\n            // window.location.reload()\n        }\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onUserAdd = e => {\n        e.preventDefault();\n        const newUser = {\n            name: this.state.name,\n            email: this.state.email,\n            // password: this.state.password,\n            // password2: this.state.password2\n        };\n        this.props.addUser(newUser, this.props.history);\n        window.location.reload()\n    };\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div>\n                <div className=\"modal fade\" id=\"add-user-modal\" data-reset=\"true\">\n                    <div className=\"modal-dialog modal-lg\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h4 className=\"modal-title\">Add User</h4>\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <form noValidate onSubmit={this.onUserAdd} id=\"add-user\">\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-md-3\">\n                                            <label htmlFor=\"name\">Name</label>\n                                        </div>\n                                        <div className=\"col-md-9\">\n                                            <input\n                                                onChange={this.onChange}\n                                                value={this.state.name}\n                                                id=\"name\"\n                                                type=\"text\"\n                                                error={errors.name}\n                                                className={classnames(\"form-control\", {\n                                                    invalid: errors.name\n                                                })} />\n                                            <span className=\"text-danger\">{errors.name}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-md-3\">\n                                            <label htmlFor=\"email\">Number</label>\n                                        </div>\n                                        <div className=\"col-md-9\">\n                                            <input\n                                                onChange={this.onChange}\n                                                value={this.state.email}\n                                                error={errors.email}\n                                                id=\"email\"\n                                                type=\"number\"\n                                                className={classnames(\"form-control\", {\n                                                    invalid: errors.email\n                                                })}\n                                            />\n                                            <span className=\"text-danger\">{errors.email}</span>\n                                        </div>\n                                        {/* </div> */}\n                                        {/* <div className=\"row mt-2\">\n                                        <div className=\"col-md-3\">\n                                            <label htmlFor=\"password\">Password</label>\n                                        </div>\n                                        <div className=\"col-md-9\">\n                                            <input\n                                                autoComplete={''}\n                                                onChange={this.onChange}\n                                                value={this.state.password}\n                                                error={errors.password}\n                                                id=\"password\"\n                                                type=\"password\"\n                                                className={classnames(\"form-control\", {\n                                                    invalid: errors.password\n                                                })}\n                                            />\n                                            <span className=\"text-danger\">{errors.password}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-md-3\">\n                                            <label htmlFor=\"password2\">Confirm Password</label>\n                                        </div>\n                                        <div className=\"col-md-9\">\n                                            <input\n                                                autoComplete={''}\n                                                onChange={this.onChange}\n                                                value={this.state.password2}\n                                                id=\"password2\"\n                                                type=\"password\"\n                                                className={classnames(\"form-control\", {\n                                                    invalid: errors.password2\n                                                })}\n                                            />\n                                            <span className=\"text-danger\">{errors.password2}</span>\n                                        </div> */}\n                                    </div>\n                                </form>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                <button\n                                    form=\"add-user\"\n                                    type=\"submit\"\n                                    className=\"btn btn-primary\">\n                                    Add User\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nUserAddModal.propTypes = {\n    addUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { addUser }\n)(withRouter(UserAddModal));\n","import axios from \"axios\";\nimport {\n    GET_ERRORS,\n    USER_ADD,\n    USER_UPDATE\n} from \"./types\";\n\nexport const addUser = (userData, history) => dispatch => {\n    axios\n        .post(\"/api/user-add\", userData)\n        .then(res =>\n            dispatch({\n                type: USER_ADD,\n                payload: res,\n            })\n        ).catch(err =>\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    );\n};\n\n\nexport const updateUser = (userData) => dispatch => {\n    axios\n        .post(\"/api/user-update\", userData)\n        .then(res =>\n            dispatch({\n                type: USER_UPDATE,\n                payload: res,\n            })\n        ).catch(err =>\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    );\n};\n","import React from 'react'\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { updateUser } from \"../../actions/userActions\";\nimport { withRouter } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport $ from 'jquery';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass UserUpdateModal extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.record.id,\n            name: this.props.record.name,\n            email: this.props.record.email,\n            // password: '',\n            errors: {},\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.record) {\n            this.setState({\n                id: nextProps.record.id,\n                name: nextProps.record.name,\n                email: nextProps.record.email,\n            })\n        }\n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n        if (nextProps.auth !== undefined\n            && nextProps.auth.user !== undefined\n            && nextProps.auth.user.data !== undefined\n            && nextProps.auth.user.data.message !== undefined\n            && nextProps.auth.user.data.success) {\n            $('#update-user-modal').modal('hide');\n            // this.setState({\n            //     errors: {}\n            // })\n            toast(nextProps.auth.user.data.message, {\n                position: toast.POSITION.TOP_CENTER\n            });\n            // window.location.reload()\n        }\n    }\n\n    onChange = e => {\n        if (e.target.id === 'user-update-name') {\n            this.setState({ name: e.target.value });\n        }\n        if (e.target.id === 'user-update-email') {\n            this.setState({ email: e.target.value });\n        }\n        if (e.target.id === 'user-update-password') {\n            this.setState({ password: e.target.value });\n        }\n    };\n\n    onUserUpdate = e => {\n        e.preventDefault();\n        const newUser = {\n            _id: this.state.id,\n            name: this.state.name,\n            email: this.state.email,\n            // password: this.state.password\n        };\n        this.props.updateUser(newUser);\n        window.location.reload()\n    };\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div>\n                <div className=\"modal fade\" id=\"update-user-modal\">\n                    <div className=\"modal-dialog modal-lg\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h4 className=\"modal-title\">Update User</h4>\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <form noValidate onSubmit={this.onUserUpdate} id=\"update-user\">\n                                    <input\n                                        onChange={this.onChange}\n                                        value={this.state.id}\n                                        id=\"user-update-id\"\n                                        type=\"text\"\n                                        className=\"d-none\" />\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-md-3\">\n                                            <label htmlFor=\"name\">Name</label>\n                                        </div>\n                                        <div className=\"col-md-9\">\n                                            <input\n                                                onChange={this.onChange}\n                                                value={this.state.name}\n                                                id=\"user-update-name\"\n                                                type=\"text\"\n                                                error={errors.name}\n                                                className={classnames(\"form-control\", {\n                                                    invalid: errors.name\n                                                })} />\n                                            <span className=\"text-danger\">{errors.name}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-md-3\">\n                                            <label htmlFor=\"email\">Number</label>\n                                        </div>\n                                        <div className=\"col-md-9\">\n                                            <input\n                                                onChange={this.onChange}\n                                                value={this.state.email}\n                                                error={errors.email}\n                                                id=\"user-update-email\"\n                                                type=\"number\"\n                                                className={classnames(\"form-control\", {\n                                                    invalid: errors.email\n                                                })}\n                                            />\n                                            <span className=\"text-danger\">{errors.email}</span>\n                                        </div>\n                                    </div>\n                                    {/* <div className=\"row mt-2\">\n                                        <div className=\"col-md-3\">\n                                            <label htmlFor=\"password\">Password</label>\n                                        </div>\n                                        <div className=\"col-md-9\">\n                                            <input\n                                                data-reset-input={true}\n                                                autoComplete={''}\n                                                onChange={this.onChange}\n                                                error={errors.password}\n                                                id=\"user-update-password\"\n                                                type=\"password\"\n                                                className={classnames(\"form-control\", {\n                                                    invalid: errors.password\n                                                })}\n                                            />\n                                            <span className=\"text-danger\">{errors.password}</span>\n                                        </div>\n                                    </div> */}\n                                </form>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                <button\n                                    form=\"update-user\"\n                                    type=\"submit\"\n                                    className=\"btn btn-primary\">\n                                    Update User\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nUserUpdateModal.propTypes = {\n    updateUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { updateUser }\n)(withRouter(UserUpdateModal));\n","import React, { Component, Fragment } from \"react\";\nimport Navbar from \"../partials/Navbar\";\nimport Sidebar from \"../partials/Sidebar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faList } from \"@fortawesome/free-solid-svg-icons/faList\";\nimport ReactDatatable from '@ashvin27/react-datatable';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport UserAddModal from \"../partials/UserAddModal\";\nimport UserUpdateModal from \"../partials/UserUpdateModal\";\nimport { toast, ToastContainer } from \"react-toastify\";\n\nclass Users extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.columns = [\n            // {\n            //     key: \"_id\",\n            //     text: \"Id\",\n            //     className: \"id\",\n            //     align: \"left\",\n            //     sortable: true,\n            // },\n            {\n                key: \"name\",\n                text: \"Name\",\n                className: \"name\",\n                align: \"left\",\n                sortable: true,\n            },\n            {\n                key: \"email\",\n                text: \"Number\",\n                className: \"email\",\n                align: \"left\",\n                sortable: true\n            },\n            // {\n            //     key: \"date\",\n            //     text: \"Date\",\n            //     className: \"date\",\n            //     align: \"left\",\n            //     sortable: true\n            // },\n            {\n                key: \"action\",\n                text: \"Action\",\n                className: \"action\",\n                width: 100,\n                align: \"left\",\n                sortable: false,\n                cell: record => {\n                    return (\n                        <Fragment>\n                            <button\n                                data-toggle=\"modal\"\n                                data-target=\"#update-user-modal\"\n                                className=\"btn btn-primary btn-sm\"\n                                onClick={() => this.editRecord(record)}\n                                style={{ marginRight: '5px' }}>\n                                <i className=\"fa fa-edit\"></i>\n                            </button>\n                            <button\n                                className=\"btn btn-danger btn-sm\"\n                                onClick={() => this.deleteRecord(record)}>\n                                <i className=\"fa fa-trash\"></i>\n                            </button>\n                        </Fragment>\n                    );\n                }\n            }\n        ];\n\n        this.config = {\n            page_size: 10,\n            length_menu: [10, 20, 50],\n            filename: \"Users\",\n            no_data_text: 'No user found!',\n            button: {\n                excel: true,\n                print: true,\n                csv: true\n            },\n            language: {\n                length_menu: \"Show _MENU_ result per page\",\n                filter: \"Filter in records...\",\n                info: \"Showing _START_ to _END_ of _TOTAL_ records\",\n                pagination: {\n                    first: \"First\",\n                    previous: \"Previous\",\n                    next: \"Next\",\n                    last: \"Last\"\n                }\n            },\n            show_length_menu: true,\n            show_filter: true,\n            show_pagination: true,\n            show_info: true,\n        };\n\n        this.state = {\n            records: []\n        };\n\n        this.state = {\n            currentRecord: {\n                id: '',\n                name: '',\n                email: '',\n                // password: '',\n                // password2: '',\n            }\n        };\n\n        this.getData = this.getData.bind(this);\n    }\n\n    componentDidMount() {\n        this.getData()\n    };\n\n    componentWillReceiveProps(nextProps) {\n        this.getData()\n    }\n\n    getData() {\n        axios\n            .post(\"/api/user-data\")\n            .then(res => {\n                this.setState({ records: res.data })\n            })\n            .catch()\n    }\n\n    editRecord(record) {\n        this.setState({ currentRecord: record });\n    }\n\n    deleteRecord(record) {\n        axios\n            .post(\"/api/user-delete\", { _id: record._id })\n            .then(res => {\n                if (res.status === 200) {\n                    toast(res.data.message, {\n                        position: toast.POSITION.TOP_CENTER,\n                    })\n                }\n            })\n            .catch();\n        this.getData();\n    }\n\n    pageChange(pageData) {\n        console.log(\"OnPageChange\", pageData);\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar />\n                <div className=\"d-flex\" id=\"wrapper\">\n                    <Sidebar />\n                    <UserAddModal />\n                    <UserUpdateModal record={this.state.currentRecord} />\n                    <div id=\"page-content-wrapper\">\n                        <div className=\"container-fluid\">\n                            <button className=\"btn btn-link mt-3\" id=\"menu-toggle\"><FontAwesomeIcon icon={faList} /></button>\n                            <button className=\"btn btn-outline-primary float-right mt-3 mr-2\" data-toggle=\"modal\" data-target=\"#add-user-modal\"><FontAwesomeIcon icon={faPlus} /> Add User</button>\n                            <h1 className=\"mt-2 text-primary\">Users List</h1>\n                            <ReactDatatable\n                                config={this.config}\n                                records={this.state.records}\n                                columns={this.columns}\n                                onPageChange={this.pageChange.bind(this)}\n                            />\n                        </div>\n                    </div>\n                    <ToastContainer />\n                </div>\n            </div>\n        );\n    }\n\n}\n\nUsers.propTypes = {\n    auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    records: state.records\n});\n\nexport default connect(\n    mapStateToProps\n)(Users);\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"./components/pages/Dashboard\";\nimport React, { Component } from 'react';\nimport Login from \"./components/auth/Login\";\nimport NotFound from \"./components/layout/NotFound\";\nimport { Provider } from \"react-redux\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Register from \"./components/auth/Register\";\nimport store from \"./store\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap';\nimport '../node_modules/font-awesome/css/font-awesome.css';\nimport '../node_modules/jquery/dist/jquery.min';\nimport '../node_modules/popper.js/dist/popper';\n\nimport User from \"./components/pages/Users\";\n\nif (localStorage.jwtToken) {\n    const token = localStorage.jwtToken;\n    setAuthToken(token);\n    const decoded = jwt_decode(token);\n    store.dispatch(setCurrentUser(decoded));\n    const currentTime = Date.now() / 1000;\n    if (decoded.exp < currentTime) {\n        store.dispatch(logoutUser());\n        window.location.href = \"./login\";\n    }\n}\n\nclass App extends Component {\n    render () {\n        return (\n            <Provider store={store}>\n                <Router>\n                    <div className=\"App\">\n                        <Switch>\n                            <Route exact path=\"/\" component={Login} />\n                            <Route exact path=\"/register\" component={Register} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Switch>\n                                <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n                                <PrivateRoute exact path=\"/users\" component={User} />\n                            </Switch>\n                            <Route exact path=\"*\" component={NotFound} />\n                        </Switch>\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport $ from \"jquery\";\nwindow.jQuery = $;\nwindow.$ = $;\nglobal.jQuery = $;\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n$(\"#menu-toggle\").click(function() {\n    $(\"#wrapper\").toggleClass(\"toggled\");\n});\n\n$('.modal[data-reset=\"true\"]').on('shown.bs.modal', () =>\n    $(\"input[name != 'timestamp']\").val(''));\n\n$('.modal').on('shown.bs.modal', () =>\n    $('input[data-reset-input=\"true\"]').val(''));\n"],"sourceRoot":""}